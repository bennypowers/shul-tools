:host {
  border: 4px solid black;
}

:host([type="digital" i]) {
  border-radius: 5px;
  display: grid;
  background: white;
  padding: 0.5em;
  justify-content: center;
  align-items: center;
  text-align: center;
  grid-template-columns: 1fr auto;
  grid-template-areas:
    'time date'
    'time zone';
}

[part=time] {
  grid-area: time;
  justify-self: start;
  font-weight: 500;
}

[part=date] {
  grid-area: date;
  font-size: 1.2em;
}

[part=zone] {
  grid-area: zone;
  font-weight: 100;
  font-size: .8em;
}

time {
  display: contents;
}

/* digital clock */
strong {
  display: flex;
  align-items: center;
  font-family: monospace;
  font-size: 200%;
  & > * {
    display: block;
  }
}

[part=hour],
[part=minute],
[part=second] {
  width: 1.5em;
}

/**
 * Analogue zmanim clock
 * ticking hands based on work done by Mate Marschalko
 * https://css-tricks.com/of-course-we-can-make-a-css-only-clock-that-tells-the-current-time/
 */

:host([type=analogue i]) {
  aspect-ratio: 1;
  border-radius: 50%;
  margin: 0 auto;
  position: relative;
  rotate: 180deg;
  overflow: hidden;
  width: 100%;
}

time {
  --_second: 1s;
  --_minute: calc(var(--_second) * 60);
  --_hour: calc(var(--_minute) * 60);
  --_degrees-per-second: 6deg;
  --_time-shift-hour: calc(var(--hour) * var(--_hour));
  --_time-shift-minute: calc(var(--minute) * var(--_minute));
  --_time-shift-second: calc(var(--second) * var(--_second));
}

@keyframes rotate {
  from { rotate: 0; }
  to { rotate: 1turn; }
}

:host([type="analogue" i]) time::after {
  --s: 8%;
  display: block;
  position: absolute;
  width: var(--s);
  top: calc(50% - calc(var(--s) / 2));
  left: calc(50% - calc(var(--s) / 2));
  content: " ";
  background: white;
  border-radius: 100%;
  border: 2px solid black;
  z-index: 2;
  aspect-ratio: 1 / 1;
  box-shadow: #0005 -2px -2px 2px;
}

#face {
  width: 100%;
  aspect-ratio: 1;
  display: block;
  rotate: 180deg;
  background:
    conic-gradient(
      var(--color-previous, orange) 0deg,
      var(--color-previous, orange) var(--angle-twilight-start),
      var(--color-next) var(--angle-twilight-end),
      var(--color-next) 360deg
    );
}

.am {
  --color-previous: black;
  --color-next: white;
}

.pm {
  --color-previous: white;
  --color-next: black;
}

.hand {
  position: absolute;
  top: 50%;
  transform-origin: center 0;
  left: calc(50% - var(--width) / 2);
  width: var(--width);
  height: var(--height);
  background-color: var(--color);
  border: 2px solid white;
  border-end-start-radius: 10px;
  border-end-end-radius: 10px;
  box-shadow: #0003 -1px -1px 1px;
}

#second {
  --width: 5px;
  --height: 45%;
  --color: var(--second-hand-color, grey);
}

#minute {
  --width: 10px;
  --height: 40%;
  --color: var(--minute-hand-color, white);
}

#hour {
  --width: 10px;
  --height: 25%;
  --color: var(--hour-hand-color, black);
}

#second.hand {
  rotate: calc(var(--second) * var(--_degrees-per-second));
}

#minute.hand {
  animation: rotate linear var(--_hour) infinite;
  animation-delay: calc(var(--_time-shift-minute) * -1);
}

#hour.hand {
  animation: rotate linear calc(var(--_hour) * 12) infinite;
  animation-delay: calc(
    (var(--_time-shift-hour) + var(--_time-shift-minute)) * -1
  );
}
