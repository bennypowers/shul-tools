import type { LitElement, PropertyValues } from 'lit';
type PropertyKeys<T> = Parameters<PropertyValues<T>['get']>[0];
type WrapperMethod<T, Key extends keyof T> = (this: T, ...args: [Record<Key, T[Key]>]) => void;
export declare function observes<T extends LitElement, Key extends PropertyKeys<T>>(...keys: Key[]): (original: WrapperMethod<T, Key>, context: ClassMethodDecoratorContext<T, WrapperMethod<T, Key>>) => () => any;
export {};
