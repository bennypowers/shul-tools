function isReactiveElement(host) {
    return typeof host.constructor.getPropertyOptions === 'function';
}
export class ClockController {
    #host;
    #interval;
    #date;
    #key;
    get date() {
        return this.#date;
    }
    constructor(host, key) {
        this.#host = host;
        this.#key = key,
            host.addController(this);
        this.start();
    }
    #tick = () => {
        this.#date = new Date();
        if (isReactiveElement(this.#host))
            this.#host.requestUpdate(this.#key, null);
        else
            this.#host.requestUpdate();
    };
    set(date) {
        this.#date = date;
    }
    reset() {
        this.stop();
        this.#date = undefined;
    }
    start() {
        this.#interval = window.setInterval(this.#tick, 1000);
        this.#tick();
    }
    stop() {
        if (this.#interval)
            window.clearInterval(this.#interval);
        this.#interval = undefined;
    }
    hostConnected() {
        this.stop();
        this.start();
    }
    hostDisconnected() {
        this.stop();
    }
}
//# sourceMappingURL=ClockController.js.map