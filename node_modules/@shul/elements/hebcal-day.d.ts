import { LitElement } from 'lit';
import { HebCalDay } from './HebCalDay.js';
export declare class HebcalDay extends LitElement {
    #private;
    static styles: import("lit").CSSResult[];
    /**
     * Locale for translating strings.
     * Currently, `he-IL` and `en-US` are supported.
     */
    accessor locale: string;
    /**
     * City whence to lookup zmanim
     * @see https://github.com/hebcal/hebcal-es6/tree/main#locationlookupname--location
     */
    accessor city: string;
    /** setting latitude and longitude overrides `city` */
    accessor latitude: number | undefined;
    /** setting latitude and longitude overrides `city` */
    accessor longitude: number | undefined;
    /**
     * Angle at which to establish nightfall
     * @see https://github.com/hebcal/hebcal-es6/tree/main#zmanimtzeitangle--date
     */
    accessor tzeitDegrees: number | undefined;
    /**
     * Number of minutes before *shkia* when Shabbat candles are lit.
     * Customarily 18 minutes outside of Jerusalem, and 40 minutes in Jerusalem
     */
    accessor candleLightingMinutesBeforeSunset: 18 | 40;
    /**
     * Number of minutes after sunset when Shabbat is customarily ended.
     */
    accessor havdalahMinutesAfterSunset: number;
    accessor havdalahDegrees: number;
    /**
     * When set, hebcal elements will display information for the specific date
     */
    accessor specificDate: Date | undefined;
    accessor debug: boolean;
    /**
     * Shared object representing the current (or selected) Hebrew calendar day
     */
    accessor hayom: HebCalDay;
    get date(): Date;
    set date(date: Date);
    render(): import("lit-html").TemplateResult<1>;
}
export declare class HebcalDayConsumer extends LitElement {
    static styles: import("lit").CSSResult[];
    /**
     * Shared object representing the current (or selected) Hebrew calendar day
     */
    accessor hayom: HebCalDay;
}
declare global {
    interface HTMLElementTagNameMap {
        'hebcal-day': HebcalDay;
    }
}
