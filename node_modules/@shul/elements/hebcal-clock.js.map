{"version":3,"file":"hebcal-clock.js","sourceRoot":"","sources":["hebcal-clock.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ZmanimKey } from './HebCalDay.js';\n\nimport { html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport { HebcalDayConsumer } from './hebcal-day.js';\n\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport styles from './hebcal-clock.css';\n\nconst MS_PER_CLOCK_FACE = 1000 * 60 * 60 * 24;\n\n/**\n * Hebcal clock\n */\n@customElement('hebcal-clock')\nexport class HebcalClock extends HebcalDayConsumer {\n  static styles = [styles];\n\n  /**\n   * Digital clocks display the current 24-hour time\n   * as well as the hebrew date, and the seasonal clock (winter / summer)\n   */\n  @property({ reflect: true })\n  accessor type: 'digital' | 'analogue' = 'digital';\n\n  override render() {\n    const { date } = this.hayom;\n    const { hour, minute, second, dayPeriod } = this.hayom.timeParts;\n\n    return html`\n      <time datetime=\"${date.toISOString()}\"\n            style=\"${styleMap(this.#getTimeStyles())}\">${this.type === 'digital' ? html`\n        <strong part=\"time\" dir=\"ltr\">\n\n          <span part=\"hour\">${hour}</span>\n          <span part=\"colon\">:</span>\n          <span part=\"minute\">${minute}</span>\n          <span part=\"colon\">:</span>\n          <span part=\"second\">${second}</span>\n        </strong>` : html`\n        <div id=\"face\"\n             class=\"${classMap({ [dayPeriod]: true })}\"\n             style=\"${styleMap(this.#getAngleStyles())}\"></div>\n        <div id=\"second\" class=\"hand\"></div>\n        <div id=\"minute\" class=\"hand\"></div>\n        <div id=\"hour\"   class=\"hand\"></div>\n        <ul id=\"indices\">\n          <li>•</li>\n          <li>•</li>\n          <li class=\"num\">3</li>\n          <li>•</li>\n          <li>•</li>\n          <li class=\"num\">6</li>\n          <li>•</li>\n          <li>•</li>\n          <li class=\"num\">9</li>\n          <li>•</li>\n          <li>•</li>\n          <li class=\"num\">12</li>\n        </ul>`}\n      </time>\n    `;\n  }\n\n  #calcAngle(key: ZmanimKey): string {\n    const date = this.hayom.dailyZmanim.get(key);\n    const ms = date.getTime();\n    const epochMidnight = this.hayom.midnight.getTime();\n    const hourOffset = this.hayom.timeParts.dayPeriod === 'pm' ? 12 : 0;\n    const offsetMs = ms - epochMidnight - (hourOffset * 1000 * 60 * 60);\n    const ratio = (offsetMs / MS_PER_CLOCK_FACE);\n    const degrees = (ratio * 360) * 2;\n    return `${degrees.toFixed(2)}deg`;\n  }\n\n  // from midnight to noon, only show dawn and sunrise\n  // from noon to midnight, only show sunset and nightfall\n  #getAngleStyles() {\n    if (this.type === 'digital') return {}\n    switch (this.hayom.timeParts.dayPeriod) {\n      case 'am': return {\n        '--angle-twilight-start': this.#calcAngle('alotHaShachar'),\n        '--angle-twilight-end': this.#calcAngle('sunrise'),\n      };\n      case 'pm': return {\n        '--angle-twilight-start': this.#calcAngle('sunset'),\n        '--angle-twilight-end': this.#calcAngle('tzeit'),\n      };\n    }\n  }\n\n  #getTimeStyles() {\n    const { hour, minute, second } = this.hayom.timeParts;\n    return {\n      '--second': second,\n      '--minute': minute,\n      '--hour': hour,\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hebcal-clock': HebcalClock;\n  }\n}\n"]}