{"version":3,"file":"ClockController.js","sourceRoot":"","sources":["ClockController.ts"],"names":[],"mappings":"AAEA,SAAS,iBAAiB,CAAC,IAA4B;IACrD,OAAO,OAAQ,IAAI,CAAC,WAAsC,CAAC,kBAAkB,KAAK,UAAU,CAAC;AAC/F,CAAC;AAED,MAAM,OAAO,eAAe;IAC1B,KAAK,CAAyB;IAE9B,SAAS,CAAU;IAEnB,KAAK,CAAO;IAEZ,IAAI,CAAU;IAEd,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,YACE,IAAO,EACP,GAAa;QAEb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,GAAG;YACf,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;QACxB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,KAAK,GAAG,GAAG,EAAE;QACX,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC;YAC/B,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;YAE1C,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC/B,CAAC,CAAA;IAED,GAAG,CAAC,IAAU;QACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,KAAK;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IACzB,CAAC;IAED,KAAK;QACH,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,IAAI;QACF,IAAI,IAAI,CAAC,SAAS;YAChB,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;QACtC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,aAAa;QACX,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;CACF","sourcesContent":["import type { ReactiveController, ReactiveControllerHost, ReactiveElement } from \"lit\";\n\nfunction isReactiveElement(host: ReactiveControllerHost): host is ReactiveElement {\n  return typeof (host.constructor as typeof ReactiveElement).getPropertyOptions === 'function';\n}\n\nexport class ClockController<T extends ReactiveControllerHost> implements ReactiveController {\n  #host: ReactiveControllerHost;\n\n  #interval?: number;\n\n  #date: Date;\n\n  #key: keyof T;\n\n  get date(): Date {\n    return this.#date;\n  }\n\n  constructor(\n    host: T,\n    key?: keyof T,\n  ) {\n    this.#host = host;\n    this.#key = key,\n    host.addController(this)\n    this.start();\n  }\n\n  #tick = () => {\n    this.#date = new Date();\n    if (isReactiveElement(this.#host))\n      this.#host.requestUpdate(this.#key, null);\n    else\n      this.#host.requestUpdate();\n  }\n\n  set(date: Date) {\n    this.#date = date;\n  }\n\n  reset() {\n    this.stop();\n    this.#date = undefined;\n  }\n\n  start() {\n    this.#interval = window.setInterval(this.#tick, 1000);\n    this.#tick();\n  }\n\n  stop() {\n    if (this.#interval)\n      window.clearInterval(this.#interval)\n    this.#interval = undefined;\n  }\n\n  hostConnected(): void {\n    this.stop();\n    this.start();\n  }\n\n  hostDisconnected(): void {\n    this.stop();\n  }\n}\n"]}