import { __esDecorate, __runInitializers } from "tslib";
import { html } from 'lit';
import { customElement } from 'lit/decorators.js';
import { HebcalDayConsumer } from './hebcal-day.js';
import { css } from "lit";
const styles = css `:host {\n  display: block;\n  font-weight: 100;\n  font-size: .8em;\n}\n\ntime {\n  display: contents;\n}\n\n`;
/**
 * Hebcal date timezone
 */
let HebcalTimezone = (() => {
    let _classDecorators = [customElement('hebcal-timezone')];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _classSuper = HebcalDayConsumer;
    var HebcalTimezone = class extends _classSuper {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;
            __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            HebcalTimezone = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        }
        static styles = [styles];
        render() {
            return html `
      <time datetime="${this.hayom.date.toISOString()}">
        ${this.hayom.timeParts.timeZoneName}
      </time>
    `;
        }
        static {
            __runInitializers(_classThis, _classExtraInitializers);
        }
    };
    return HebcalTimezone = _classThis;
})();
export { HebcalTimezone };
//# sourceMappingURL=hebcal-timezone.js.map