import { Context } from '@web/dev-server-core';
import { Element as ElementAst } from 'parse5';
import { ParsedImportMap } from '@import-maps/resolve';
import { NormalizedInjectSetting, InjectSetting } from './importMapsPlugin';
export declare const IMPORT_MAP_PARAM = "wds-import-map";
export declare function normalizeInjectSetting(setting?: InjectSetting | InjectSetting[]): NormalizedInjectSetting[];
export declare function shouldInject(path: string, setting: NormalizedInjectSetting): boolean;
export declare function mergeImportMaps(a: ParsedImportMap, b: ParsedImportMap): import("@import-maps/resolve/types/src/types").ParsedImportMap;
export declare function withImportMapIdParam(path: string, id: string): string;
export declare function getDocumentBaseUrl(context: Context, baseNode?: ElementAst | null): URL;
export declare function getRequestImportMapId(context: Context, importMapsIdsByHtmlPath: Map<string, number>): string | null | undefined;
//# sourceMappingURL=utils.d.ts.map